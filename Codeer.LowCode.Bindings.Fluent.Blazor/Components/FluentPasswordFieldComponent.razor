@using Codeer.LowCode.Bindings.Fluent.Blazor.Extensions
@using Codeer.LowCode.Blazor.OperatingModel
@using Microsoft.AspNetCore.Components.Web
@inherits FluentFieldComponentBase<PasswordField, FluentPasswordFieldDesign>

@if (IsViewMode != true) {
  <div style="margin-bottom:10px">
    <FluentTextField @bind-Value:get="@Value!" @bind-Value:set="@RaiseOnValueChanged" Id="@WebElementId.DomSafeString()"
                     Disabled="@IsDisabled" TextFieldType="TextFieldType.Password" Placeholder="Password"/>
  </div>
  <div>
    <FluentTextField @bind-Value="@ConfirmPassword"
                     Disabled="@IsDisabled" TextFieldType="TextFieldType.Password"
                     Placeholder="Password (confirmation)"/>
  </div>
}

@code {
  private bool IsDisabled => Field.IsEnabled == false;
  private bool IsViewMode => Field.IsViewOnly;
  private string? Value => Field.Value;

  string ConfirmPassword {
    get => Field.ConfirmPassword;
    set => Field.ConfirmPassword = value;
  }

  private async Task RaiseOnValueChanged(string? value) {
    await Field.SetValueAsync(value);
  }

}